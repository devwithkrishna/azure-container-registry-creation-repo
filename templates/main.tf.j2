resource "azurerm_resource_group" "acr_rg" {
  name     = "{{ resource_group_name }}"
  location = "{{ location }}"
  tags = {
    Environment     = "{{ environment | upper }}"
    Orchestrator    = "Terraform"
    DisplayName     = "{{ resource_group_name | upper }}"
    ApplicationName = "{{ application_name | lower }}"
    Temporary       = "{{ temporary | upper }}"
  }
}

resource "azurerm_container_registry" "acr" {
  name                = "{{ container_registry_name }}"
  resource_group_name = azurerm_resource_group.acr_rg.name
  location            = azurerm_resource_group.acr_rg.location
  sku                 = "{{ sku_name }}"

  {% for item in georeplications %}
  georeplications {

      location                = "{{ item.location }}"
      zone_redundancy_enabled = {{ item.zone_redundancy_enabled | lower }}
      tags = {
        Environment     = "{{ environment | upper }}"
        Orchestrator    = "Terraform"
        DisplayName     = "replication-{{ container_registry_name | upper }}"
        ApplicationName = "{{ application_name | lower }}"
        Temporary       = "{{ temporary | upper }}"
      }

  }
  {% endfor %}

  retention_policy_in_days      = {{ container_registry_config.retention_policy_in_days if sku_name == 'Premium' else 'null' }}
  public_network_access_enabled = {{ container_registry_config.public_network_access_enabled | lower }}
  quarantine_policy_enabled     = {{ container_registry_config.quarantine_policy_enabled | lower if sku_name == 'Premium' else 'false' }}
  zone_redundancy_enabled       = {{ container_registry_config.zone_redundancy_enabled | lower if sku_name == 'Premium' else 'false' }}
  admin_enabled                 = {{ container_registry_config.admin_enabled | lower }}
  anonymous_pull_enabled        = {{ container_registry_config.anonymous_pull_enabled | lower if sku_name != 'Basic' else 'false' }}
  data_endpoint_enabled         = {{ container_registry_config.data_endpoint_enabled | lower if sku_name == 'Premium' else 'false' }}
  trust_policy_enabled          = {{ container_registry_config.trust_policy_enabled | lower if sku_name == 'Premium' else 'false' }}

  network_rule_bypass_option = "{{ azure_services_bypass }}"
  tags = {
    Environment     = "{{ environment | upper }}"
    Orchestrator    = "Terraform"
    DisplayName     = "{{ container_registry_name | upper }}"
    ApplicationName = "{{ application_name | lower }}"
    Temporary       = "{{ temporary | upper }}"
  }
}
